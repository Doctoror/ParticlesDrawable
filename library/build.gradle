apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'maven-publish'
apply plugin: 'signing'

android {

    namespace 'com.doctoror.particlesdrawable'

    compileSdk Integer.parseInt(libs.versions.androidCompileSdkVersion.get())

    defaultConfig {

        minSdk Integer.parseInt(libs.versions.androidMinSdkVersion.get())
        targetSdk Integer.parseInt(libs.versions.androidTargetSdkVersion.get())

        final def globalConfiguration = rootProject.extensions.getByName("ext")
        versionCode globalConfiguration["androidVersionCode"]
        versionName globalConfiguration["androidVersionName"]
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    lintOptions {
        checkAllWarnings true
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFile getDefaultProguardFile('proguard-android.txt')
            proguardFile 'proguard-keep-as-api.pro'
        }
    }

    flavorDimensions = ['default']

    productFlavors {
        exposed {
            proguardFile 'proguard-configurable-keep.pro'
        }

        production {
        }
    }

    configurations {
        javadocDeps
    }

    publishing {
        singleVariant("release") {
            withSourcesJar()
            withJavadocJar()
        }
    }
}

dependencies {
    testImplementation libs.test.core
    testImplementation libs.junit.vintage
    testImplementation libs.kotlin.stdlib
    testImplementation libs.mockito.kotlin
    testImplementation libs.robolectric

    javadocDeps libs.annotations

    implementation libs.annotations
}

publishing {

    publications {
        release(MavenPublication) {
            groupId = GROUP
            artifactId = POM_ARTIFACT_ID
            version = rootProject.extensions.getByName("ext")["androidVersionName"]

            repositories {
                maven {
                    url 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'

                    credentials {
                        final Properties properties = new Properties()
                        properties.load(project.rootProject.file('local.properties').newDataInputStream())

                        username properties.getProperty('releaseRepositoryUsername')
                        password properties.getProperty('releaseRepositoryPassword')
                    }
                }
            }

            pom {
                name = POM_NAME
                packaging = POM_PACKAGING
                description = POM_DESCRIPTION
                url = POM_URL

                scm {
                    url = POM_SCM_URL
                    connection = POM_SCM_CONNECTION
                    developerConnection = POM_SCM_DEV_CONNECTION
                }

                licenses {
                    license {
                        name = POM_LICENCE_NAME
                        url = POM_LICENCE_URL
                        distribution = POM_LICENCE_DIST
                    }
                }

                developers {
                    developer {
                        id = POM_DEVELOPER_ID
                        name = POM_DEVELOPER_NAME
                    }
                }
            }

            artifacts {
                artifact "$buildDir/outputs/aar/library-production-release.aar"
            }

            afterEvaluate {
                from components.find { it.name == 'release' }
            }
        }
    }
}

signing {
    useGpgCmd()
    publishing.publications.forEach {
        sign it
    }
}

publishReleasePublicationToMavenRepository.mustRunAfter "bundleProductionReleaseAar"

